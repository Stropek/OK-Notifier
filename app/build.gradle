apply plugin: 'com.android.application'
apply plugin: 'jacoco'

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testPaidDebugUnitTest', 'createPaidDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$[0-9].*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/paid/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testPaidDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

android {
    signingConfigs {
        config {
            keyAlias 'OkNotifierKey'
            keyPassword 'password123'
            storeFile file('../android.jks')
            storePassword 'password'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.przemolab.oknotifier"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }
    }
    flavorDimensions 'flavors'
    productFlavors {
        free {
            dimension 'flavors'
            applicationIdSuffix ".free"
        }
        paid {
            dimension 'flavors'
            applicationIdSuffix ".paid"
        }
    }
}

ext {
    supportLibrary = '28.+'
    dagger = '2.16'
    room = '1.1.1'
    mockito = '2.18.3'
    espresso = '3.0.2'
}

dependencies {
    implementation "com.android.support:appcompat-v7:$supportLibrary"
    implementation "com.android.support:exifinterface:$supportLibrary"
    implementation "com.android.support:cardview-v7:$supportLibrary"
    implementation "com.android.support:support-v4:$supportLibrary"
    implementation "com.android.support:recyclerview-v7:$supportLibrary"
    implementation "com.android.support:preference-v7:$supportLibrary"
    implementation "com.android.support:customtabs:$supportLibrary"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.google.firebase:firebase-ads:15.0.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.github.kevinsawicki:http-request:6.0'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation "android.arch.persistence.room:runtime:$room"

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger"
    annotationProcessor "android.arch.persistence.room:compiler:$room"

    testImplementation 'junit:junit:4.12'

    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$dagger"

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "org.mockito:mockito-android:$mockito"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espresso"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espresso"
}

apply plugin: 'com.google.gms.google-services'